<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- springmvc 扫描控制层的包，比如@Controller这些注解 扫描控制层的注解，方案1 指定具体扫描的包，方案2 指定扫描父包，必须use-default-filters="false"， 
		否则事务会不起作用 -->
	<context:component-scan
		base-package="com.paotui.controller,com.paotui.config" />
	<!-- <context:component-scan base-package="com.dxf" use-default-filters="false"> 
		指定扫描的注解 <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
		</context:component-scan> -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:default-servlet-handler />

	<!-- 拦截器 -->
	<!-- <mvc:interceptors> <mvc:interceptor> 匹配的是url路径， 如果不配置或/**,将拦截所有的请求，如果web.xml中配置了/,拦截的资源包括Controller、静态资源等 
		<mvc:mapping path="/**" /> 排除某些不需要拦截的资源 <mvc:exclude-mapping path="/js/**"/> 
		<mvc:exclude-mapping path="/css/**"/> <mvc:exclude-mapping path="/images/**"/> 
		指定自定义拦截器 <bean class="com.dxf.interceptor.LoginInterceptor"></bean> </mvc:interceptor> 
		</mvc:interceptors> -->
	
	<mvc:annotation-driven conversion-service="convertorService">
	<!-- 从后台传回前台Date的数据转为字符串 -->
		<!-- 处理json里的日期数据，默认日期被fastjson转为时间戳数据 -->
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String"
									value="yyyy-MM-dd HH-mm-ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 配置资源文件 -->
	<!--<bean id="hibernateMessages"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="basenames">
			<list>
				<value>ValidationMessages</value>
			</list>
		</property>
	</bean>-->

	<!-- 设置自定义的转换器,将前台传回Date数据转换为事件类型的格式 -->
	<bean id="convertorService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">

		<property name="converters">
			<!-- 注入的是列表 -->
			<list>
				<!-- 可以写多个转换器 -->
				<bean class="com.paotui.converter.CustomerDateConvert"></bean>
			</list>
		</property>
	</bean>

	<!--&lt;!&ndash; 配置验证器 &ndash;&gt;
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass"
			value="org.hibernate.validator.HibernateValidator"></property>
		<property name="validationMessageSource"
			ref="hibernateMessages"></property>
	</bean>-->

	<!-- 视图解析器 跳转到相关jsp的资源时，只写资源的名字就可以 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/"></property>
		<!-- 后缀 -->
		<property name="suffix" value=".html"></property>
	</bean>

	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="1024000"></property>
	</bean>
</beans>